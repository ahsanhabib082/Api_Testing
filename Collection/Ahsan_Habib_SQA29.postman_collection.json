{
	"info": {
		"_postman_id": "bc075206-ddbf-4fa4-84d7-4b63afa55b3b",
		"name": "Ahsan_Habib_SQA29",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34055865"
	},
	"item": [
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"id\", jsonData.bookingid)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"\r",
							"\r",
							"\r",
							"//Last Name\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"pm.environment.set(\"lastName\",lastName)\r",
							"\r",
							"\r",
							"// Total price\r",
							"var totalPrice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"pm.environment.set(\"totalPrice\",totalPrice)\r",
							"\r",
							"\r",
							"//DepositPaid\r",
							"var depositpaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"pm.environment.set(\"depositpaid\",depositpaid)\r",
							"\r",
							"\r",
							"\r",
							"//Date\r",
							"const moment = require ('moment')\r",
							"const today = moment()\r",
							"//console.log(today.add(1, 'd').add(3, 'M').format(\"YYYY-MM-DD\"))\r",
							"\r",
							"var checkin = today.add(1, 'd').add(3, 'M').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkin\", checkin)\r",
							"\r",
							"\r",
							"var checkout = today.add(1, 'd').add(3, 'M').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkout\", checkout)\r",
							"\r",
							"\r",
							"\r",
							"var additionalneeds = pm.variables.replaceIn(\"{{$randomProduct}}\")\r",
							"pm.environment.set(\"additionalneeds\",additionalneeds)\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalPrice}},\r\n\t\"depositpaid\" : {{depositpaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkin}}\",\r\n    \t\"checkout\" : \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{additionalneeds}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var statusCode = pm.response.code\r",
							"console.log(statusCode)\r",
							"\r",
							"\r",
							"if (statusCode==200){\r",
							"\r",
							"    var json = pm.response.json();\r",
							"\r",
							"pm.test(\"First Name Validation\", function () {\r",
							"     pm.expect(json.firstname).to.equal(pm.environment.get(\"firstName\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Last Name Validation\", function(){\r",
							"    pm.expect(json.lastname).to.equal(pm.environment.get(\"lastName\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Total Price Validation\", function(){\r",
							"    pm.expect(json.totalprice).to.equal(pm.environment.get(\"totalPrice\"));\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"DepositPaid Validation\", function(){\r",
							"    pm.expect(json.depositpaid.toString()).to.equal(pm.environment.get(\"depositpaid\"));\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Checkin Validation\", function () {\r",
							"     pm.expect(json.bookingdates.checkin).to.equal(pm.environment.get(\"checkin\"))\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Checkout Validation\",function(){\r",
							"    pm.expect(json.bookingdates.checkout).to.equal(pm.environment.get(\"checkout\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Additional Needs Validation\", function () {\r",
							"    \r",
							"     pm.expect(json.additionalneeds).to.equal(pm.environment.get(\"additionalneeds\"))\r",
							"})\r",
							"\r",
							"\r",
							"}\r",
							"\r",
							"else if (statusCode==400){\r",
							"pm.test(\"Not Found\")\r",
							"}\r",
							"\r",
							"else{\r",
							"pm.test(\"Something went wrong\")\r",
							"}\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalPrice}},\r\n\t\"depositpaid\" : {{depositpaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkin}}\",\r\n    \t\"checkout\" : \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{additionalneeds}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"acess_token\",jsonData.token)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Booking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var updated_firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"pm.environment.set(\"updated_firstName\",updated_firstName)\r",
							"\r",
							"var updated_lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"pm.environment.set(\"updated_lastName\",updated_lastName)\r",
							"\r",
							"var updated_totalPrice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"pm.environment.set(\"updated_totalPrice\",updated_totalPrice)\r",
							"\r",
							"var updated_depositpaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"pm.environment.set(\"updated_depositpaid\",updated_depositpaid)\r",
							"\r",
							"const moment = require ('moment')\r",
							"const today = moment()\r",
							"\r",
							"var updated_checkin = today.add(1, 'd').add(3, 'M').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"updated_checkin\", updated_checkin)\r",
							"\r",
							"\r",
							"var updated_checkout = today.add(1, 'd').add(3, 'M').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"updated_checkout\", updated_checkout)\r",
							"\r",
							"\r",
							"\r",
							"var updated_additionalneeds = pm.variables.replaceIn(\"{{$randomProduct}}\")\r",
							"pm.environment.set(\"updated_additionalneeds\",updated_additionalneeds)\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{acess_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{updated_firstName}}\",\r\n\t\"lastname\" : \"{{updated_lastName}}\",\r\n\t\"totalprice\" : {{updated_totalPrice}},\r\n\t\"depositpaid\" : {{updated_depositpaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{updated_checkin}}\",\r\n    \t\"checkout\" : \"{{updated_checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{updated_additionalneeds}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify After Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var statusCode = pm.response.code;\r",
							"\r",
							"if (statusCode === 200){\r",
							"    var json = pm.response.json();\r",
							"\r",
							"    pm.test(\" Updated First Name Validation\", function () {\r",
							"         pm.expect(json.firstname).to.equal(pm.environment.get(\"updated_firstName\"));\r",
							"    });\r",
							"\r",
							"    pm.test(\"Updated Last Name Validation\", function(){\r",
							"        pm.expect(json.lastname).to.equal(pm.environment.get(\"updated_lastName\"));\r",
							"    });\r",
							"\r",
							"    pm.test(\" Updated Total Price Validation\", function(){\r",
							"        pm.expect(json.totalprice.toString()).to.equal(pm.environment.get(\"updated_totalPrice\"));\r",
							"    })\r",
							"\r",
							"    pm.test(\"Updated DepositPaid Validation\", function(){\r",
							"        pm.expect(json.depositpaid.toString()).to.equal(pm.environment.get(\"updated_depositpaid\"));\r",
							"    });\r",
							"\r",
							"    pm.test(\"Checkin Validation\", function () {\r",
							"         pm.expect(json.bookingdates.checkin).to.equal(pm.environment.get(\"updated_checkin\"));\r",
							"    });\r",
							"\r",
							"    pm.test(\"Checkout Validation\", function(){\r",
							"        pm.expect(json.bookingdates.checkout).to.equal(pm.environment.get(\"updated_checkout\"));\r",
							"    });\r",
							"\r",
							"    pm.test(\"Additional Needa Validation\", function () {\r",
							"         pm.expect(json.additionalneeds).to.equal(pm.environment.get(\"updated_additionalneeds\"));\r",
							"    });\r",
							"} else if (statusCode === 400){\r",
							"    pm.test(\"Not Found\");\r",
							"} else {\r",
							"    pm.test(\"Something went wrong\");\r",
							"}\r",
							"\r",
							"var template = `\r",
							"<style type=\"text/css\">\r",
							"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
							"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
							"    .tftable tr {background-color:#ffffff;}\r",
							"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
							"    .tftable tr:hover {background-color:#e0ffff;}\r",
							"</style>\r",
							"\r",
							"<table class=\"tftable\" border=\"1\">\r",
							"    <tr>\r",
							"        <th>Status</th>\r",
							"        <th>Content-Type</th>\r",
							"        <th>Response</th>\r",
							"    </tr>\r",
							"    <tr>\r",
							"        <td>400</td>\r",
							"        <td>text/plain</td>\r",
							"        <td>Bad Request</td>\r",
							"    </tr>\r",
							"</table>\r",
							"`;\r",
							"\r",
							"function constructVisualizerPayload() {\r",
							"    var response = {\r",
							"        status: \"400\",\r",
							"        contentType: \"text/plain\",\r",
							"        response: \"Bad Request\"\r",
							"    };\r",
							"    return { response: response };\r",
							"}\r",
							"\r",
							"pm.visualizer.set(template, constructVisualizerPayload());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{acess_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Booking",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		}
	]
}